---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/login":
    post:
      summary: Login with email and password
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: jwt_token
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: Invalid email or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: string
                password:
                  type: string
                  example: string
              required:
              - email
              - password
        description: Authenticate user with email and password
  "/api/v1/files":
    post:
      summary: Upload a file
      tags:
      - Files
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: file uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_link:
                    type: string
                    example: http://localhost:3000/files/sample.txt
                  password:
                    type: string
                    example: password123
        '422':
          description: file upload failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: File path not provided
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_path:
                  type: string
        required: true
        description: The file to upload
    get:
      summary: List user files
      tags:
      - Files
      security:
      - Bearer: []
      responses:
        '200':
          description: files listed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: sample.txt
                        download_link:
                          type: string
                          example: http://localhost:3000/files/sample.txt
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: Unauthorized request
  "/api/v1/users":
    post:
      summary: Create a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: jwt_token
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                    example: Password confirmation doesn't match Password, Name can't
                      be blank, Email is invalid, Password is too short (minimum is
                      6 characters), and Password Must include at least one uppercase
                      letter and one special character
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: string
                email:
                  type: string
                  example: string
                password:
                  type: string
                  example: string
                password_confirmation:
                  type: string
                  example: string
              required:
              - name
              - email
              - password
              - password_confirmation
        description: Create a new user
servers:
- url: http://localhost:3000
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- Bearer: []
